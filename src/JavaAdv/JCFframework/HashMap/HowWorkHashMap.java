package JavaAdv.JCFframework.HashMap;

import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

/**
 * Реализация HashMap (хэширование ускоряет работу)
 *
 * Скрин.
 * Класс HashMap использует внутри себя массив, к каждому элементу мы можем обращаться по индексу
 * В каждой ячейке хранится связный список.
 * - быстро выполняет put и get.
 * В кажом узле есть int hash, K key, V value и Node<K,V> next (ссылка на след. узел)
 * Похоже на LinkedList (это он и есть). Массив LinkedList'ов.
 *
 * Допустим, есть массив из 0-15 (16 элементов).
 * put(K k, V v)
 * map.put("KING", 100);
 * считается методом hashcode(), hash("KING") = 2306996, но значение большое
 * поэтому считаем index = hash & (n-1), где n = 16 (элмементов), & - побитовое умножение
 * hash = 4 -> это означает что мы пару "KING", 100 кладем в ячейку 4 массива.
 * В ячейке будет KING |2306996|100|null
 * ключ|hash|value|ссылка на следующий элемент
 *
 * Добавляем новый элемент put("CLARK", 90), index = 2
 * Добавляем еще новый элемент put("BLAKE",10) index = 4
 * но в ячейке 4 уже лежит значение, поэтому тут мы используем LinkedList
 * ключи KING и BLAKE имеют разные хеши, но index получился одинаковый
 * -> мы просто добавляем в ячейку 4 еще один элемент, теперь KING ссылается на BLAKE
 *
 * При добавлении новых элементов этот массив будет расти -> n будет меняться
 *
 * Метод get
 * get("CLARK") - высчитываем hash(key) и index ячейки в которой эта пара ключ-значение находится
 * Чтобы обратиться к ключу к значению - мы высчитав hash код получаем индекс элемента
 * (нам не нужно проходиться по всему массиву)
 * хэши равны -> equals (CLARK == CLARK) равны -> и получаем значение (value) по данному ключу
 *
 * Если ключ находится в конце связного списка в ячейке.
 * Считаем hash, индекс - идем в 1 элемент, сравниваем хэши, да - equals проверяем, нет - нет, идем дальше
 * и так пока хэши не совпадут и equals не даст true
 *
 * Очень важно чтобы hashCode() метод был адекватный, от него зависит искорость выполнения.
 *
 * HashSet использует HashMap, т.е не имеет свою реализацию
 */
public class HowWorkHashMap {
    public static void main(String[] args) {
        Map<String, Integer> map = new HashMap<>();

        map.put("Bob", 25);
        map.put("Tom", 100);
        map.put("Rom", 222);

        Set<String> set = new HashSet<>();
    }
}
