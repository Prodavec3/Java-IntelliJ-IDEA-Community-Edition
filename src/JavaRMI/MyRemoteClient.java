package JavaRMI;

import java.rmi.Naming;

/**
 * Клиент должен получить объект - "заглушку", т.к именно из него будут вызываться методы.
 * Клиент осуществит "поиск".
 *
 * Клиент всегда использует удаленную реализацию в качестве типа сервиса. Фактически ему не нужно знать настоящее
 * имя класа удаленного сервиса.
 * Необходимо привести значение Naming.lookup к типу интерфейса, т.к метод lookup возвращает Object.
 *
 * 1) Клиент осуществляет поиск по реестру RMI
 * 2) Реестр возвращает объект - "заглушку"
 * 3) Клиент вызывает метод из "заглушки", как будто она является настоящим сервисом
 *
 * 3 частые ошибки при работе с реестром RMI:
 * 1) Не запускают rmiregistry перед запуском удаленного сервиса (когда мы регистрируем сервис с помощью
 * Naming.rebind() rmiregistry должен работать
 * 2) Не делают аргументы и возвращаемые значения сериализуемыми
 * 3) Забывают предоставить клиенту класс "заглушки"
 */
public class MyRemoteClient {
    public static void main(String[] args) {
        new MyRemoteClient().go();
    }

    public void go(){
        try {
            MyRemote service = (MyRemote) Naming.lookup("rmi://127.0.0.1/Remote Hello");

            String s = service.sayHello();

            System.out.println(s);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
