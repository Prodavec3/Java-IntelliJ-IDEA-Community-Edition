package JavaStudy;

public class PrivedeniePrimitivnixTipov {
    public static void main(String[] args) {
        // примитивные типы
        int x = 23; //32bit, byte -128..127, float 32bit, long 64bit, double 64bit
        long y = 42312314;
        double a = 512.4212;
        float f = 1231.2412f;
        // допустим, есть 2 примитива и надо преобразовать один в другой
        /**
         * Без f всегда число double, поэтому надо f,
         *
         * int по-умолчанию, число, после ставим L для конверта в лонг
         */
        float a1 = 123.4f; // double -> float
        long a2 = 1233123124123123124l; // int -> long

        /**
         * Из long -> int конвертнуть не можем
         */
        int i = 123;
        long l = i; // неявное
        int i1 = (int)l; // явное, т.е джава хочет чтобы мы указали точно, поэтому пишем явное приведение типа (int)

        /**
         * Также float <-> int, double <-> float
         *
         * Вещественная часть это то что после запятой, float -> int режет вещественную часть
         */
        long res = Math.round(123.5); // округляем - будет 124, если же явно конвертим
        System.out.println(res);

        byte b = (byte)128; // будет -128, а если 129 укажем то будет -127, т.к двигаем числовой ряд, справа не влезло в то что слева

        /**
         * У примитивов нет методов, т.е переменная x. и методов там нет
         * Допустим, нужен какой-то метод для примитива - для этого используются классы обертки
         * Double, Float, Long, Integer, Short, Byte, Character, Boolean и соответствуют своим примитивам
         * в этих классах полезные методы есть
         * Если нужно просто число - используются примитивы (чище инициализация)
         * а если нужен метод связанный с примитивом - то можем найти это в классах
         */
        // пример
        int x1 = 1;
        //noinspection removal
        Integer x2 = new Integer(42);
        // Например метод, который из строки парсит число
        Integer.parseInt("241");

        /**
         * автоупаковка. если мы слева имеем ссылку - справа можем указать примитив
         */
        Integer x3 = 123; // == Integer x3 = new Integer(123);
        /**
         * Автораспаковка
         */
        int x4 = x3; // Распаковали примитив
    }
}
